"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.Listener=void 0;var _ListenerManager=require("../managers/ListenerManager");var _jsLogger=_interopRequireDefault(require("js-logger"));var _Util=require("../util/Util");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap;var cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj}}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj.default=obj;if(cache){cache.set(obj,newObj)}return newObj}class Listener{reloading=false;constructor(options){Object.assign(this,options);_ListenerManager.Listeners.register(this)}initialize(client){this.client=client;if(this.ws)client.ws[this.once?"once":"on"](this.event,this._run.bind(this));else client[this.once?"once":"on"](this.event,this._run.bind(this))}static validate(listener){const trace=_Util.Util.resolveValidationErrorTrace([listener.name,listener.fileName]);if(!listener.name)return _jsLogger.default.warn("Listener must have a name",trace);else if(typeof listener.name!=="string")return _jsLogger.default.warn("Listener name must be a string",trace);else if(!listener.event)return _jsLogger.default.warn("Listener must have a event",trace);else if(typeof listener.event!=="string")return _jsLogger.default.warn("Listener event must be a string",trace);else if(typeof listener.run!=="function")return _jsLogger.default.warn("Listener must have a run function",trace);else return true}unregister(){_ListenerManager.Listeners.unregister(this.name)}async _run(...args){await Promise.resolve(this.run.call(this,...args)).catch(error=>{_jsLogger.default.error(typeof error.code!=="undefined"?error.code:"",error.message);if(error.stack)_jsLogger.default.trace(error.stack)})}async reload(){if(!this.fileName)return;this.reloading=true;delete require.cache[require.resolve(this.fileName)];await Promise.resolve(`${this.fileName}`).then(s=>_interopRequireWildcard(require(s)));return _ListenerManager.Listeners.get(this.name)}}exports.Listener=Listener;