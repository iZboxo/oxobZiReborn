"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ChannelType=exports.ArgumentType=exports.Argument=void 0;var _jsLogger=_interopRequireDefault(require("js-logger"));var _Util=require("../util/Util");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}let ArgumentType;exports.ArgumentType=ArgumentType;(function(ArgumentType){ArgumentType[ArgumentType["SUB_COMMAND"]=1]="SUB_COMMAND";ArgumentType[ArgumentType["SUB_COMMAND_GROUP"]=2]="SUB_COMMAND_GROUP";ArgumentType[ArgumentType["STRING"]=3]="STRING";ArgumentType[ArgumentType["INTEGER"]=4]="INTEGER";ArgumentType[ArgumentType["BOOLEAN"]=5]="BOOLEAN";ArgumentType[ArgumentType["USER"]=6]="USER";ArgumentType[ArgumentType["CHANNEL"]=7]="CHANNEL";ArgumentType[ArgumentType["ROLE"]=8]="ROLE";ArgumentType[ArgumentType["MENTIONABLE"]=9]="MENTIONABLE";ArgumentType[ArgumentType["NUMBER"]=10]="NUMBER"})(ArgumentType||(exports.ArgumentType=ArgumentType={}));let ChannelType;exports.ChannelType=ChannelType;(function(ChannelType){ChannelType[ChannelType["GUILD_TEXT"]=0]="GUILD_TEXT";ChannelType[ChannelType["GUILD_VOICE"]=2]="GUILD_VOICE";ChannelType[ChannelType["GUILD_CATEGORY"]=4]="GUILD_CATEGORY";ChannelType[ChannelType["GUILD_STORE"]=6]="GUILD_STORE";ChannelType[ChannelType["GUILD_NEWS_THREAD"]=10]="GUILD_NEWS_THREAD";ChannelType[ChannelType["GUILD_PUBLIC_THREAD"]=11]="GUILD_PUBLIC_THREAD";ChannelType[ChannelType["GUILD_PRIVATE_THREAD"]=12]="GUILD_PRIVATE_THREAD";ChannelType[ChannelType["GUILD_STAGE_VOICE"]=13]="GUILD_STAGE_VOICE"})(ChannelType||(exports.ChannelType=ChannelType={}));class Argument{required=false;constructor(options){Object.assign(this,options);if(typeof this.type==="string"&&Object.keys(ArgumentType).includes(this.type))this.type=ArgumentType[this.type]}static toAPIArgument(argument){if(argument.type===ArgumentType.SUB_COMMAND||argument.type===ArgumentType.SUB_COMMAND_GROUP){return{...argument,options:argument.options?.map(a=>Argument.toAPIArgument(a))}}return{..._Util.Util.resolveArgumentOptions(argument),autocomplete:typeof argument.run==="function"}}static validate(argument,command){const trace=_Util.Util.resolveValidationErrorTrace([argument.name,command.name,command.fileName]);if(!argument.name)return _jsLogger.default.warn("Argument must have a name");else if(typeof argument.name!=="string")return _jsLogger.default.warn("Argument name must be a string");else if(typeof argument.description!=="string")return _jsLogger.default.warn("Argument description must be a string",trace);else if(!Object.values(ArgumentType).includes(argument.type))return _jsLogger.default.warn("Argument type must be one of ArgumentType",trace);else if(argument.required&&typeof argument.required!=="boolean")return _jsLogger.default.warn("Argument required must be a boolean or undefined",trace);else if(argument.choices&&!argument.choices.every(choice=>typeof choice.name==="string"&&typeof choice.value==="string"))return _jsLogger.default.warn("Argument choices must be a array of CommandArgumentChoice or undefined",trace);else if(argument.options&&!argument.options.every(option=>Argument.validate(option,command)))return;else if(argument.channelTypes&&argument.type!==ArgumentType.CHANNEL)return _jsLogger.default.warn("Argument options cannot have the channelTypes property if argument type is not a channel",trace);else if(argument.channelTypes&&!argument.channelTypes.every(channelType=>Object.values(ChannelType).includes(channelType)))return _jsLogger.default.warn("Argument channelTypes must be a array of ChannelType or undefined",trace);else return true}}exports.Argument=Argument;