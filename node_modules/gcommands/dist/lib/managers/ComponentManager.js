"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.Components=exports.ComponentManager=void 0;var _discord=require("discord.js");var _Component=require("../structures/Component");var _jsLogger=_interopRequireDefault(require("js-logger"));var _PluginManager=require("./PluginManager");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class ComponentManager extends _discord.Collection{register(component){if(component instanceof _Component.Component){if(this.has(component.name)&&!this.get(component.name)?.reloading)_jsLogger.default.warn("Overwriting component",component.name);if(this.client)component.initialize(this.client);if(_PluginManager.Plugins.currentlyLoading)component.owner=_PluginManager.Plugins.currentlyLoading;this.set(component.name,component);_jsLogger.default.debug("Registered component",component.name,component.owner?`(by plugin ${component.owner})`:"")}else _jsLogger.default.warn("Component must be a instance of Component");return this}unregister(componentName){const component=this.get(componentName);if(component){this.delete(componentName);_jsLogger.default.debug("Unregistered component",component.name)}return component}async initiate(client){this.client=client;this.forEach(component=>component.initialize(client))}}exports.ComponentManager=ComponentManager;const Components=new ComponentManager;exports.Components=Components;