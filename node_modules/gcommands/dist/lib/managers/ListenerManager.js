"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.Listeners=exports.ListenerManager=void 0;var _Listener=require("../structures/Listener");var _discord=require("discord.js");var _jsLogger=_interopRequireDefault(require("js-logger"));var _PluginManager=require("./PluginManager");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class ListenerManager extends _discord.Collection{register(listener){if(listener instanceof _Listener.Listener){if(this.has(listener.name)){this.get(listener.name).unregister();if(!this.get(listener.name)?.reloading)_jsLogger.default.warn("Overwriting listener",listener.name)}if(!_Listener.Listener.validate(listener))return;if(this.client)this.initialize(listener);if(_PluginManager.Plugins.currentlyLoading)listener.owner=_PluginManager.Plugins.currentlyLoading;this.set(listener.name,listener);_jsLogger.default.debug("Registered listener",listener.name,"listening to",listener.event,listener.owner?`(by plugin ${listener.owner})`:"")}else _jsLogger.default.warn("Listener must be a instance of Listener");return this}unregister(name){const listener=this.get(name);if(listener){this.delete(name);if(this.client){const maxListeners=this.client.getMaxListeners();if(maxListeners!==0)this.client.setMaxListeners(maxListeners-1);listener.ws?this.client.ws.off(listener.event,listener._run):this.client.off(listener.event,listener._run)}_jsLogger.default.debug("Unregistered listener",listener.name,"listening to",listener.event)}return listener}initialize(listener){const maxListeners=this.client.getMaxListeners();if(maxListeners!==0)this.client.setMaxListeners(maxListeners+1);listener.initialize(this.client);return listener}async initiate(client){this.client=client;this.forEach(listener=>listener.initialize(client))}}exports.ListenerManager=ListenerManager;const Listeners=new ListenerManager;exports.Listeners=Listeners;