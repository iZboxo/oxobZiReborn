"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.GClient=exports.AutoDeferType=void 0;var _discord=require("discord.js");var _PluginManager=require("./managers/PluginManager");var _CommandManager=require("./managers/CommandManager");var _ListenerManager=require("./managers/ListenerManager");var _ComponentManager=require("./managers/ComponentManager");var _responses=_interopRequireDefault(require("../responses.json"));var _timers=require("timers");var _registerDirectories=require("./util/registerDirectories");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}let AutoDeferType;exports.AutoDeferType=AutoDeferType;(function(AutoDeferType){AutoDeferType[AutoDeferType["EPHEMERAL"]=1]="EPHEMERAL";AutoDeferType[AutoDeferType["NORMAL"]=2]="NORMAL";AutoDeferType[AutoDeferType["UPDATE"]=3]="UPDATE"})(AutoDeferType||(exports.AutoDeferType=AutoDeferType={}));class GClient extends _discord.Client{responses=_responses.default;constructor(options){super(options);if(options.dirs)(0,_registerDirectories.registerDirectories)(options.dirs);if(this.options.database){if(typeof this.options.database.init==="function")this.options.database.init()}(0,_timers.setImmediate)(async()=>{await Promise.all([_PluginManager.Plugins.initiate(this),_CommandManager.Commands.initiate(this),_ComponentManager.Components.initiate(this),_ListenerManager.Listeners.initiate(this)])})}getDatabase(_){return this.options.database}}exports.GClient=GClient;