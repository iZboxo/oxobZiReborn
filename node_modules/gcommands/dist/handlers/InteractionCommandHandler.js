"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.InteractionCommandHandler=InteractionCommandHandler;var _discord=require("discord.js");var _GClient=require("../lib/GClient");var _CommandContext=require("../lib/structures/contexts/CommandContext");var _HandlerManager=require("../lib/managers/HandlerManager");var _CommandManager=require("../lib/managers/CommandManager");var _nodeTimers=require("node:timers");var _jsLogger=_interopRequireDefault(require("js-logger"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const cooldowns=new _discord.Collection;async function InteractionCommandHandler(interaction){const client=interaction.client;const command=_CommandManager.Commands.get(interaction.commandName);if(!command&&client.options?.unknownCommandMessage)return interaction.reply({content:client.responses.NOT_FOUND,ephemeral:true});if(command.cooldown){const cooldown=_HandlerManager.Handlers.cooldownHandler(interaction.user.id,command,cooldowns);if(cooldown)return interaction.reply({content:client.responses.COOLDOWN.replace("{time}",String(cooldown)).replace("{name}",command.name+" command"),ephemeral:true})}const ctx=new _CommandContext.CommandContext(client,{interaction:interaction,channel:interaction.channel,createdAt:interaction.createdAt,createdTimestamp:interaction.createdTimestamp,guild:interaction.guild,guildId:interaction.guildId,user:interaction.user,member:interaction.member,memberPermissions:interaction.memberPermissions,command:command,arguments:interaction.options,deferReply:interaction.deferReply.bind(interaction),deleteReply:interaction.deleteReply.bind(interaction),editReply:interaction.editReply.bind(interaction),fetchReply:interaction.fetchReply.bind(interaction),followUp:interaction.followUp.bind(interaction),reply:interaction.reply.bind(interaction)});if(!(await command.inhibit(ctx)))return;let autoDeferTimeout;if(command.autoDefer)autoDeferTimeout=(0,_nodeTimers.setTimeout)(()=>{ctx.deferReply({ephemeral:command.autoDefer===_GClient.AutoDeferType.EPHEMERAL})},2500-client.ws.ping);await Promise.resolve(command.run(ctx)).catch(async error=>{_jsLogger.default.error(typeof error.code!=="undefined"?error.code:"",error.message);if(error.stack)_jsLogger.default.trace(error.stack);const errorReply=()=>ctx.safeReply({content:client.responses.ERROR,components:[],ephemeral:true});if(typeof command.onError==="function")await Promise.resolve(command.onError(ctx,error)).catch(async()=>await errorReply());else await errorReply()}).then(()=>{if(autoDeferTimeout)clearTimeout(autoDeferTimeout);_jsLogger.default.debug(`Successfully ran command (${command.name}) for ${interaction.user.username}`)})}