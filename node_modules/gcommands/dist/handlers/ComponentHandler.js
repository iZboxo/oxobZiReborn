"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ComponentHandler=ComponentHandler;var _discord=require("discord.js");var _GClient=require("../lib/GClient");var _Component=require("../lib/structures/Component");var _ComponentContext=require("../lib/structures/contexts/ComponentContext");var _ComponentManager=require("../lib/managers/ComponentManager");var _HandlerManager=require("../lib/managers/HandlerManager");var _nodeTimers=require("node:timers");var _jsLogger=_interopRequireDefault(require("js-logger"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const cooldowns=new _discord.Collection;async function ComponentHandler(interaction){const client=interaction.client;const regex=new RegExp("[A-Za-z0-9]+","gd");const args=interaction.customId.match(regex);const component=_ComponentManager.Components.get(args.shift());if(!component||!component.type.includes(interaction.isButton()?_Component.ComponentType.BUTTON:_Component.ComponentType.SELECT_MENU)||component.guildId&&component.guildId!==interaction.guildId)return;if(component.cooldown){const cooldown=_HandlerManager.Handlers.cooldownHandler(interaction.user.id,component,cooldowns);if(cooldown)return interaction.reply({content:client.responses.COOLDOWN.replace("{time}",String(cooldown)).replace("{name}",component.name+(interaction.isButton()?" button":" select menu")),ephemeral:true})}const ctx=new _ComponentContext.ComponentContext(client,{interaction:interaction,channel:interaction.channel,createdAt:interaction.createdAt,createdTimestamp:interaction.createdTimestamp,guild:interaction.guild,guildId:interaction.guildId,user:interaction.user,member:interaction.member,memberPermissions:interaction.memberPermissions,component:component,customId:interaction.customId,arguments:args,values:interaction.isSelectMenu()?interaction.values:undefined,deferReply:interaction.deferReply.bind(interaction),deferUpdate:interaction.deferUpdate.bind(interaction),deleteReply:interaction.deleteReply.bind(interaction),editReply:interaction.editReply.bind(interaction),fetchReply:interaction.fetchReply.bind(interaction),followUp:interaction.followUp.bind(interaction),reply:interaction.reply.bind(interaction),type:interaction.isButton()?"BUTTON":"SELECT_MENU"});if(!(await component.inhibit(ctx)))return;let autoDeferTimeout;if(component.autoDefer)autoDeferTimeout=(0,_nodeTimers.setTimeout)(()=>{component.autoDefer===_GClient.AutoDeferType.UPDATE?ctx.deferUpdate():ctx.deferReply({ephemeral:component.autoDefer===_GClient.AutoDeferType.EPHEMERAL})},2500-client.ws.ping);await Promise.resolve(component.run(ctx)).catch(async error=>{_jsLogger.default.error(typeof error.code!=="undefined"?error.code:"",error.message);if(error.stack)_jsLogger.default.trace(error.stack);const errorReply=()=>ctx.safeReply({content:client.responses.ERROR,ephemeral:true,components:[]});if(typeof component.onError==="function")await Promise.resolve(component.onError(ctx,error)).catch(async()=>await errorReply());else await errorReply()}).then(()=>{if(autoDeferTimeout)clearTimeout(autoDeferTimeout);_jsLogger.default.debug(`Successfully ran component (${component.name}) for ${interaction.user.username}`)})}